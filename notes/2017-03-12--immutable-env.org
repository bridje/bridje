* Immutable Env - Namespaces as a unit of validity - Idea:
- A namespace has a number of states: valid, invalidated, edited.
- There are two types of environment - the main Bridje runtime environment of the
  process, and each REPL has a delta of any changes it's made
- Users can attempt to reload a whole namespace - either by giving the NS as a
  String, or by asking the runtime to load the file again.
  - If it's valid, the namespace is replaced, and anything that transitively
    depends on it is marked invalidated. (edited?)
  - If it's not, user gets the compile error, nothing changes (not even the bits
    of the NS that /do/ work)
- Users can reload all the namespaces in the system - which attmpts to load all
  of the invalidated namespaces in the system from their files.
- Users can resync all of the namespaces in the system, which looks at all of
  the files updated since they were last loaded, and reloads them in dependency
  order (including any namespaces invalidated by those namespaces)
