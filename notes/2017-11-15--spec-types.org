* Spec types?
ok, so we have a concept of attributes, and a concept of datatypes (maybe?)
tbh, the name of the type shouldn't really depend on where it's defined - we'd like to move definitions without changing the data

mutually recursive types?
parameterised types?

#+BEGIN_SRC clojure
  (defrec
    (defdata User
      {:id UUID
       :username String})

    (defdata Store
      {:id UUID
       :key {:req #{:User.id :Store.id}}
       :label String})

    (defdata (Maybe a)
      (Just a)
      Nothing)

    (defdata (Tree a)
      (Node {:req {:left (Tree a)
                   :right (Tree a)}})

      (Leaf a)))

  (:james/Store.key store)

  (:james/Node.left tree)

  (Node {:left (Leaf 5)
         :right (Node {:left (Leaf 10)
                       :right (Leaf 20)})})

  (:james/Just.1 my-just)
#+END_SRC
