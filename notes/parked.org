- Java generics
- finally? how does this work with our new shiny objects?
- don't think '$set' is the primitive here, unless we only allow object updates within its own fns?
- nested transients? can we give the user a lot of help?
- Truffle parts in Java, so that we don't have to deal with Kotlin compiling to something that can't be optimised?
- more into ANTLR?
- polyglot interop - caching
  - Graal says we should try cache the source - but we don't have dynamic lookup in Bridje - we'd statically link any function calls at compile time
  - unless we don't cache those? will be a PITA for calling Bridje from Java - they'll never get optimised
  - can we add a node on top whose job is to check for invalidations?
  - caller langs won't re-parse the source every time, that'd be crazy - so they'd have a node in hand
- have we sorted out spec2 implications yet? i.e. how to specify nested record keys
